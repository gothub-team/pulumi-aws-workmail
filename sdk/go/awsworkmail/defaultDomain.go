// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package awsworkmail

import (
	"context"
	"reflect"

	"errors"
	"github.com/gothub-team/pulumi-awsworkmail/sdk/go/awsworkmail/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

type DefaultDomain struct {
	pulumi.CustomResourceState

	ClientToken    pulumix.Output[*string]                          `pulumi:"clientToken"`
	DomainName     pulumix.Output[string]                           `pulumi:"domainName"`
	OrganizationId pulumix.Output[string]                           `pulumi:"organizationId"`
	Records        pulumix.GArrayOutput[DnsRecord, DnsRecordOutput] `pulumi:"records"`
	Region         pulumix.Output[string]                           `pulumi:"region"`
}

// NewDefaultDomain registers a new resource with the given unique name, arguments, and options.
func NewDefaultDomain(ctx *pulumi.Context,
	name string, args *DefaultDomainArgs, opts ...pulumi.ResourceOption) (*DefaultDomain, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DomainName == nil {
		return nil, errors.New("invalid value for required argument 'DomainName'")
	}
	if args.OrganizationId == nil {
		return nil, errors.New("invalid value for required argument 'OrganizationId'")
	}
	if args.Region == nil {
		return nil, errors.New("invalid value for required argument 'Region'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DefaultDomain
	err := ctx.RegisterResource("awsworkmail:index:DefaultDomain", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDefaultDomain gets an existing DefaultDomain resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDefaultDomain(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DefaultDomainState, opts ...pulumi.ResourceOption) (*DefaultDomain, error) {
	var resource DefaultDomain
	err := ctx.ReadResource("awsworkmail:index:DefaultDomain", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DefaultDomain resources.
type defaultDomainState struct {
}

type DefaultDomainState struct {
}

func (DefaultDomainState) ElementType() reflect.Type {
	return reflect.TypeOf((*defaultDomainState)(nil)).Elem()
}

type defaultDomainArgs struct {
	ClientToken    *string `pulumi:"clientToken"`
	DomainName     string  `pulumi:"domainName"`
	OrganizationId string  `pulumi:"organizationId"`
	Region         string  `pulumi:"region"`
}

// The set of arguments for constructing a DefaultDomain resource.
type DefaultDomainArgs struct {
	ClientToken    pulumix.Input[*string]
	DomainName     pulumix.Input[string]
	OrganizationId pulumix.Input[string]
	Region         pulumix.Input[string]
}

func (DefaultDomainArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*defaultDomainArgs)(nil)).Elem()
}

type DefaultDomainOutput struct{ *pulumi.OutputState }

func (DefaultDomainOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DefaultDomain)(nil)).Elem()
}

func (o DefaultDomainOutput) ToDefaultDomainOutput() DefaultDomainOutput {
	return o
}

func (o DefaultDomainOutput) ToDefaultDomainOutputWithContext(ctx context.Context) DefaultDomainOutput {
	return o
}

func (o DefaultDomainOutput) ToOutput(ctx context.Context) pulumix.Output[DefaultDomain] {
	return pulumix.Output[DefaultDomain]{
		OutputState: o.OutputState,
	}
}

func (o DefaultDomainOutput) ClientToken() pulumix.Output[*string] {
	value := pulumix.Apply[DefaultDomain](o, func(v DefaultDomain) pulumix.Output[*string] { return v.ClientToken })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

func (o DefaultDomainOutput) DomainName() pulumix.Output[string] {
	value := pulumix.Apply[DefaultDomain](o, func(v DefaultDomain) pulumix.Output[string] { return v.DomainName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func (o DefaultDomainOutput) OrganizationId() pulumix.Output[string] {
	value := pulumix.Apply[DefaultDomain](o, func(v DefaultDomain) pulumix.Output[string] { return v.OrganizationId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func (o DefaultDomainOutput) Records() pulumix.GArrayOutput[DnsRecord, DnsRecordOutput] {
	value := pulumix.Apply[DefaultDomain](o, func(v DefaultDomain) pulumix.GArrayOutput[DnsRecord, DnsRecordOutput] { return v.Records })
	unwrapped := pulumix.Flatten[[]DnsRecord, pulumix.GArrayOutput[DnsRecord, DnsRecordOutput]](value)
	return pulumix.GArrayOutput[DnsRecord, DnsRecordOutput]{OutputState: unwrapped.OutputState}
}

func (o DefaultDomainOutput) Region() pulumix.Output[string] {
	value := pulumix.Apply[DefaultDomain](o, func(v DefaultDomain) pulumix.Output[string] { return v.Region })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(DefaultDomainOutput{})
}
