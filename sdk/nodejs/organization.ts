// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class Organization extends pulumi.CustomResource {
    /**
     * Get an existing Organization resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Organization {
        return new Organization(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awsworkmail:index:Organization';

    /**
     * Returns true if the given object is an instance of Organization.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Organization {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Organization.__pulumiType;
    }

    public readonly alias!: pulumi.Output<string>;
    public readonly clientToken!: pulumi.Output<string>;
    public readonly directoryId!: pulumi.Output<string>;
    public readonly domains!: pulumi.Output<outputs.DomainArgs[]>;
    public readonly enableInteroperability!: pulumi.Output<boolean>;
    public readonly kmsKeyArn!: pulumi.Output<string>;

    /**
     * Create a Organization resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: OrganizationArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.alias === undefined) && !opts.urn) {
                throw new Error("Missing required property 'alias'");
            }
            if ((!args || args.clientToken === undefined) && !opts.urn) {
                throw new Error("Missing required property 'clientToken'");
            }
            if ((!args || args.directoryId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'directoryId'");
            }
            if ((!args || args.domains === undefined) && !opts.urn) {
                throw new Error("Missing required property 'domains'");
            }
            if ((!args || args.enableInteroperability === undefined) && !opts.urn) {
                throw new Error("Missing required property 'enableInteroperability'");
            }
            if ((!args || args.kmsKeyArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'kmsKeyArn'");
            }
            resourceInputs["alias"] = args ? args.alias : undefined;
            resourceInputs["clientToken"] = args ? args.clientToken : undefined;
            resourceInputs["directoryId"] = args ? args.directoryId : undefined;
            resourceInputs["domains"] = args ? args.domains : undefined;
            resourceInputs["enableInteroperability"] = args ? args.enableInteroperability : undefined;
            resourceInputs["kmsKeyArn"] = args ? args.kmsKeyArn : undefined;
        } else {
            resourceInputs["alias"] = undefined /*out*/;
            resourceInputs["clientToken"] = undefined /*out*/;
            resourceInputs["directoryId"] = undefined /*out*/;
            resourceInputs["domains"] = undefined /*out*/;
            resourceInputs["enableInteroperability"] = undefined /*out*/;
            resourceInputs["kmsKeyArn"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Organization.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a Organization resource.
 */
export interface OrganizationArgs {
    alias: pulumi.Input<string>;
    clientToken: pulumi.Input<string>;
    directoryId: pulumi.Input<string>;
    domains: pulumi.Input<pulumi.Input<inputs.DomainArgsArgs>[]>;
    enableInteroperability: pulumi.Input<boolean>;
    kmsKeyArn: pulumi.Input<string>;
}
